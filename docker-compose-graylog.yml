version: '3.6'
services:

  telegraf:
    image: telegraf:latest
    user: root
    entrypoint: "telegraf"
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8125:8125/udp
    depends_on:
      - influxdb
    links:
      - influxdb
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    ports:
      - 8086:8086
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - backend

  grafana:
    image: grafana/grafana:8.0.2
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    links:
      - influxdb
    networks:
      - backend

  db:
    image: mysql:8.4
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=UTC
    ports:
      - 3306:3306
    volumes:
      - mysqldb_data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/init/ddl.sql:/docker-entrypoint-initdb.d/1.sql # Create data model
      - ./mysql/init/data.sql:/docker-entrypoint-initdb.d/2.sql # Fill with 1M users
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - backend

  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_ADMIN_PASSWORD}
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - action.auto_create_index=false
      - plugins.security.ssl.http.enabled=false
      - plugins.security.disabled=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 20
    ports:
      - 9200:9200
    volumes:
      - os_data:/usr/share/opensearch/data
    networks:
      - backend

  logstash:
    image: logstash:${ELK_STACK_VERSION}
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:9600 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 20
    command: >
      sh -c '
        logstash-plugin install logstash-output-gelf &&
        /usr/local/bin/docker-entrypoint
      '
    ports:
      - 5044:5044
    volumes:
      - ./logstash/opensearch/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/opensearch/pipeline:/usr/share/logstash/pipeline
    depends_on:
      opensearch:
        condition: service_healthy
    networks:
      - backend

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_STACK_VERSION}
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./mysql/logs:/var/log/mysql # Replace with the slow log path
      - fb_data:/usr/share/filebeat/data
    depends_on:
      db:
        condition: service_healthy
      logstash:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    networks:
      - backend

  mongodb:
    image: mongo:6.0
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db/
    networks:
      - backend

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:6.0
    depends_on:
      mongodb:
        condition: service_started
      opensearch:
        condition: service_healthy
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD}
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_SHA256_PASSWORD}
      - GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:9000
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://admin:${OPENSEARCH_ADMIN_PASSWORD}@opensearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
      - GRAYLOG_TIMEZONE=UTC
      - TZ=UTC
    entrypoint: /usr/bin/tini -- wait-for-it opensearch:9200 -- /docker-entrypoint.sh
    ports:
      - 9000:9000       # Graylog web interface and REST API
      - 1514:1514       # Syslog TCP
      - 1514:1514/udp   # Syslog UDP
      - 12201:12201     # GELF TCP
      - 12201:12201/udp # GELF UDP
    volumes:
      - ./graylog/graylog.conf:/usr/share/graylog/config/graylog.conf
      - graylog_data:/usr/share/graylog/data/data
      - graylog_journal:/usr/share/graylog/data/journal
    networks:
      - backend

  hsa-app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

volumes:
  grafana_data: {}
  influxdb_data: {}
  mysqldb_data:
  fb_data:
  os_data:
  mongodb_data:
  graylog_data:
  graylog_journal:

networks:
  backend:
    driver: bridge
